name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov black flake8 mypy
    
    - name: Run code quality checks
      run: |
        black --check darkoperator/ tests/
        flake8 darkoperator/ tests/
        mypy darkoperator/ --ignore-missing-imports
    
    - name: Run basic tests
      run: |
        python test_basic_fixed.py
    
    - name: Run quality gates
      run: |
        python quality_gates_final.py

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan.sarif'
    
    - name: Run dependency check
      run: |
        pip install safety
        safety check --file requirements.txt

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: |
        docker build -t darkoperator:test .
    
    - name: Test Docker image
      run: |
        docker run --rm darkoperator:test --version

  documentation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10
    
    - name: Install documentation dependencies
      run: |
        pip install sphinx sphinx-rtd-theme
    
    - name: Build documentation
      run: |
        # Documentation build would go here
        echo "Documentation build placeholder"
    
    - name: Deploy documentation
      if: github.ref == 'refs/heads/main'
      run: |
        # Documentation deployment would go here
        echo "Documentation deployment placeholder"